import Link from 'next/link'
import './globals.css'
import { LogOutBtn } from '@/Button/logoutBtn'
import LoginBtn from '@/Button/loginBtn'
import SignupBtn from '@/Button/signupBtn'
import { authOptions } from '@/pages/api/auth/[...nextauth]'
import { getServerSession } from 'next-auth'
import { connectDB } from '@/util/database'
import MapLink from '@/components/useRouter/map'
import TagMapLink from '@/components/useRouter/taglink'
import FoodRecommendLink from '@/components/useRouter/recommendlink'
import MypageLink from '@/components/useRouter/mypagelink'
import DarkMode from './DarkMode'
import { cookies } from 'next/headers'
import ListLink from '@/components/useRouter/listlink'
import HomeLink from '@/components/useRouter/homelink'

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default async function RootLayout({ children }) {
  let session = await getServerSession(authOptions);
  let db = (await connectDB).db('store');
  let result = await db.collection('user_cred').find().toArray();
  let res = cookies().get('mode')

  return (
    <html lang="en">
      <body className={
        res != undefined && res.value == 'dark'
          ? 'dark-mode'
          : ''
      }>
        <div className="navbar">
          {/* 여기에 아이콘 추가하기 */}
          <span className="logo">오늘 뭐 먹지?</span>
          <div className='menu'>
            <HomeLink/>
            <FoodRecommendLink/>
            <MapLink/>
            {session && <TagMapLink />} {/* TagMapLink 컴포넌트는 로그인 상태에서만 렌더링 */}
            <ListLink/>
          </div>
          <div>
            { 
              session ? (
                <span style={{ fontWeight: 'bold' }}>
                  <MypageLink />
                  {session.user.name}님 환영합니다. <LogOutBtn />
                </span>
              ) : (
                <span>
                  <LoginBtn />
                  <SignupBtn />
                </span>
              )
            }
            <DarkMode/>
          </div>  
        </div>
        {children}
      </body>
    </html>
  )
}
